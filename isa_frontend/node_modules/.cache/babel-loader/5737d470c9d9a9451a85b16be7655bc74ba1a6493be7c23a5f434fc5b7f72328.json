{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u6BD4\\u8D5B\\\\\\u4FE1\\u606F\\u5B89\\u5168\\u7ADE\\u8D5B\\\\m1_new\\\\isa_project\\\\src\\\\views\\\\Test\\\\Process\\\\Form\\\\Form.js\",\n  _s = $RefreshSig$();\nimport \"./FormStyle.css\";\nimport echarts from 'echarts';\nimport { useRef, useEffect, useState } from \"react\";\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const [chart, setChart] = useState(null);\n  const loadCsvData = async filePath => {\n    const response = await fetch(filePath);\n    const csvText = await response.text();\n    const csvData = Papa.parse(csvText, {\n      header: true\n    }).data;\n    const chartData = transformCsvDataToChartData(csvData);\n    renderChart(chartData);\n  };\n  const transformCsvDataToChartData = data => {\n    // 将 CSV 数据转换为 ECharts 所需的格式\n    return data.map(row => ({\n      name: row.name,\n      value: parseFloat(row.value)\n    }));\n  };\n  const renderChart = data => {\n    // 渲染 ECharts 图表\n    const chart = echarts.init(document.getElementById('my-chart'));\n    chart.setOption({\n      xAxis: {\n        type: 'category',\n        data: data.map(item => item.name)\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        type: 'bar',\n        data\n      }]\n    });\n    setChart(chart);\n  };\n  useEffect(() => {\n    loadCsvData('../../../../../../../Data/expResult/Bounce/');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"my-chart\",\n    style: {\n      width: '100%',\n      height: '400px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n  // return (\n  //     <>\n  //         <div id=\"form\">\n  //              <div ref={chartRef} style={{ width: '100%', height: 300 }}></div>\n  //              <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\n  //         </div>\n  //     </>\n  // );\n}\n_s(Form, \"emiLVeZDkQQszKK8qVrGGhsfzT4=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["echarts","useRef","useEffect","useState","Papa","jsxDEV","_jsxDEV","Form","_s","chart","setChart","loadCsvData","filePath","response","fetch","csvText","text","csvData","parse","header","data","chartData","transformCsvDataToChartData","renderChart","map","row","name","value","parseFloat","init","document","getElementById","setOption","xAxis","type","item","yAxis","series","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/比赛/信息安全竞赛/m1_new/isa_project/src/views/Test/Process/Form/Form.js"],"sourcesContent":["import \"./FormStyle.css\"\r\nimport echarts from 'echarts';\r\nimport { useRef, useEffect, useState } from \"react\";\r\nimport Papa from 'papaparse';\r\nexport default function Form(){\r\n    const [chart, setChart] = useState(null);\r\n\r\n    const loadCsvData = async (filePath) => {\r\n      const response = await fetch(filePath);\r\n      const csvText = await response.text();\r\n      const csvData = Papa.parse(csvText, { header: true }).data;\r\n      const chartData = transformCsvDataToChartData(csvData);\r\n      renderChart(chartData);\r\n    };\r\n  \r\n    const transformCsvDataToChartData = (data) => {\r\n      // 将 CSV 数据转换为 ECharts 所需的格式\r\n      return data.map((row) => ({\r\n        name: row.name,\r\n        value: parseFloat(row.value),\r\n      }));\r\n    };\r\n  \r\n    const renderChart = (data) => {\r\n      // 渲染 ECharts 图表\r\n      const chart = echarts.init(document.getElementById('my-chart'));\r\n      chart.setOption({\r\n        xAxis: { type: 'category', data: data.map((item) => item.name) },\r\n        yAxis: { type: 'value' },\r\n        series: [{ type: 'bar', data }],\r\n      });\r\n      setChart(chart);\r\n    };\r\n  \r\n    useEffect(() => {\r\n      loadCsvData('../../../../../../../Data/expResult/Bounce/');\r\n    }, []);\r\n  \r\n    return <div id=\"my-chart\" style={{ width: '100%', height: '400px' }} />;\r\n    // return (\r\n    //     <>\r\n    //         <div id=\"form\">\r\n    //              <div ref={chartRef} style={{ width: '100%', height: 300 }}></div>\r\n    //              <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\r\n    //         </div>\r\n    //     </>\r\n    // );\r\n}"],"mappings":";;AAAA,OAAO,iBAAiB;AACxB,OAAOA,OAAO,MAAM,SAAS;AAC7B,SAASC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7B,eAAe,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,WAAW,GAAG,MAAOC,QAAQ,IAAK;IACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAQ,CAAC;IACtC,MAAMG,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACrC,MAAMC,OAAO,GAAGb,IAAI,CAACc,KAAK,CAACH,OAAO,EAAE;MAAEI,MAAM,EAAE;IAAK,CAAC,CAAC,CAACC,IAAI;IAC1D,MAAMC,SAAS,GAAGC,2BAA2B,CAACL,OAAO,CAAC;IACtDM,WAAW,CAACF,SAAS,CAAC;EACxB,CAAC;EAED,MAAMC,2BAA2B,GAAIF,IAAI,IAAK;IAC5C;IACA,OAAOA,IAAI,CAACI,GAAG,CAAEC,GAAG,KAAM;MACxBC,IAAI,EAAED,GAAG,CAACC,IAAI;MACdC,KAAK,EAAEC,UAAU,CAACH,GAAG,CAACE,KAAK;IAC7B,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMJ,WAAW,GAAIH,IAAI,IAAK;IAC5B;IACA,MAAMX,KAAK,GAAGT,OAAO,CAAC6B,IAAI,CAACC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAAC;IAC/DtB,KAAK,CAACuB,SAAS,CAAC;MACdC,KAAK,EAAE;QAAEC,IAAI,EAAE,UAAU;QAAEd,IAAI,EAAEA,IAAI,CAACI,GAAG,CAAEW,IAAI,IAAKA,IAAI,CAACT,IAAI;MAAE,CAAC;MAChEU,KAAK,EAAE;QAAEF,IAAI,EAAE;MAAQ,CAAC;MACxBG,MAAM,EAAE,CAAC;QAAEH,IAAI,EAAE,KAAK;QAAEd;MAAK,CAAC;IAChC,CAAC,CAAC;IACFV,QAAQ,CAACD,KAAK,CAAC;EACjB,CAAC;EAEDP,SAAS,CAAC,MAAM;IACdS,WAAW,CAAC,6CAA6C,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOL,OAAA;IAAKgC,EAAE,EAAC,UAAU;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AAACrC,EAAA,CA3CuBD,IAAI;AAAAuC,EAAA,GAAJvC,IAAI;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}