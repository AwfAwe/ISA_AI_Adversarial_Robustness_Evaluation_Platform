{"ast":null,"code":"import * as React from 'react';\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\nvar css_248z = \"/* add css styles here (optional) */\\n\\n.styles-module_react-toc__2CQL2 > li,\\n.styles-module_react-toc__2CQL2 > ul > li,\\n.styles-module_react-toc__2CQL2 > ul > ul > li,\\n.styles-module_react-toc__2CQL2 > ul > ul > ul > li,\\n.styles-module_react-toc__2CQL2 > ul > ul > ul > ul > li,\\n.styles-module_react-toc__2CQL2 > ul > ul > ul > ul > ul > li {\\n  padding-bottom: 10px;\\n}\\n\\n.styles-module_react-toc__2CQL2 > li > a,\\n.styles-module_react-toc__2CQL2 > ul > li > a,\\n.styles-module_react-toc__2CQL2 > ul > ul > li > a,\\n.styles-module_react-toc__2CQL2 > ul > ul > ul > li > a,\\n.styles-module_react-toc__2CQL2 > ul > ul > ul > ul > li > a,\\n.styles-module_react-toc__2CQL2 > ul > ul > ul > ul > ul > li > a {\\n  color: #dc014e;\\n  text-decoration: none;\\n}\\n\\n.styles-module_react-toc__2CQL2 > li > a:hover,\\n.styles-module_react-toc__2CQL2 > ul > li > a:hover,\\n.styles-module_react-toc__2CQL2 > ul > ul > li > a:hover,\\n.styles-module_react-toc__2CQL2 > ul > ul > ul > li > a:hover,\\n.styles-module_react-toc__2CQL2 > ul > ul > ul > ul > li > a:hover,\\n.styles-module_react-toc__2CQL2 > ul > ul > ul > ul > ul > li > a:hover {\\n  color: #565656;\\n}\\n\";\nvar styles = {\n  \"react-toc\": \"styles-module_react-toc__2CQL2\",\n  \"reactToc\": \"styles-module_react-toc__2CQL2\"\n};\nstyleInject(css_248z);\n\n// Replaces all the specified letters.\nvar replaceAll = function (retStr, customMatchers) {\n  for (var key in customMatchers) {\n    retStr = retStr.replace(new RegExp(key, 'g'), customMatchers[key]);\n  }\n  return retStr;\n};\n// Removes # and connects each word with '-'.\nvar createLink = function (string) {\n  var shapedString = string.toLowerCase().replace(/^#+\\s/, '').trimRight();\n  var anchor = shapedString.split(' ').join('-');\n  return anchor;\n};\n// It removes # from the given string. And it shortens the string if its longer than \"stringLimit\".\nvar createTitle = function (string, stringLimit) {\n  var rawTitle = string.replace(/^#+\\s/g, '');\n  if (rawTitle.length >= stringLimit) return \"\".concat(rawTitle.slice(0, stringLimit), \"..\");\n  return rawTitle;\n};\n// It extracts headings from the given markdownText.\nvar extractHeadingsFromMd = function (markdownText, highestTargetHeadings, lowestTargetHeadings) {\n  var headingRegex = new RegExp(\"^#{\".concat(highestTargetHeadings, \",\").concat(lowestTargetHeadings, \"}\\\\s.+(\\\\n|\\\\r|\\\\r\\\\n)\"), 'gm');\n  return markdownText.match(headingRegex);\n};\nvar removeCodeBlockFromMd = function (markdownText) {\n  var codeBlockRegex = new RegExp('((````[a-z]*\\n[\\\\s\\\\S]*?\\n````)|(```[a-z]*\\n[\\\\s\\\\S]*?\\n```)|(~~~[a-z]*\\n[\\\\s\\\\S]*?\\n~~~))', 'gms');\n  return markdownText.replace(codeBlockRegex, '');\n};\nvar Heading = /** @class */function () {\n  function Heading(title, level, titleLimit, customMatchers) {\n    this.title = title;\n    this.level = level;\n    this.titleLimit = titleLimit;\n    this.customMatchers = customMatchers ? customMatchers : {};\n  }\n  Heading.prototype.generateList = function () {\n    var link = createLink(this.title);\n    var listItem = React.createElement(\"li\", null, React.createElement(\"a\", {\n      href: \"#\".concat(replaceAll(link, this.customMatchers))\n    }, createTitle(this.title, this.titleLimit)));\n    return React.createElement(React.Fragment, null, nestUl(this.level, listItem));\n  };\n  return Heading;\n}();\n/*\r\n Create a new heading object from the given string\r\n*/\nvar newHeading = function (headingText, titleLimit, customMatchers) {\n  var matchedHashes = headingText.match(/^#+/);\n  if (!matchedHashes) return null;\n  var headingLevel = matchedHashes[0].split('').length;\n  var matchers = customMatchers ? customMatchers : {};\n  return new Heading(headingText, headingLevel, titleLimit, matchers);\n};\n/*\r\n Return a nested Unordered list based on the given heading level.\r\n*/\nvar nestUl = function (level, listItem) {\n  switch (level) {\n    case 1:\n      return listItem;\n    case 2:\n      return React.createElement(\"ul\", null, listItem);\n    case 3:\n      return React.createElement(\"ul\", null, React.createElement(\"ul\", null, listItem));\n    case 4:\n      return React.createElement(\"ul\", null, React.createElement(\"ul\", null, React.createElement(\"ul\", null, listItem)));\n    case 5:\n      return React.createElement(\"ul\", null, React.createElement(\"ul\", null, React.createElement(\"ul\", null, React.createElement(\"ul\", null, listItem))));\n    case 6:\n      return React.createElement(\"ul\", null, React.createElement(\"ul\", null, React.createElement(\"ul\", null, React.createElement(\"ul\", null, React.createElement(\"ul\", null, listItem)))));\n    default:\n      return listItem;\n  }\n};\nvar Toc = function (_a) {\n  var markdownText = _a.markdownText,\n    titleLimit = _a.titleLimit,\n    highestHeadingLevel = _a.highestHeadingLevel,\n    lowestHeadingLevel = _a.lowestHeadingLevel,\n    className = _a.className,\n    type = _a.type,\n    customMatchers = _a.customMatchers;\n  if (!markdownText) return null;\n  // Set default values\n  var limit = titleLimit ? titleLimit : 200;\n  var defaultClass = type === 'raw' ? '' : 'react-toc';\n  var customClass = className || defaultClass;\n  var headingLevels = [highestHeadingLevel || 1, lowestHeadingLevel || 6];\n  // Style settings\n  var style = styles[customClass] || className;\n  // Mutate headings\n  var matchedHeadings = extractHeadingsFromMd(removeCodeBlockFromMd(markdownText), headingLevels[0], headingLevels[1]);\n  var headingObjects = matchedHeadings === null || matchedHeadings === void 0 ? void 0 : matchedHeadings.map(function (heading) {\n    return newHeading(heading, limit, customMatchers);\n  });\n  var headingTags = headingObjects === null || headingObjects === void 0 ? void 0 : headingObjects.map(function (heading) {\n    return heading.generateList();\n  });\n  if (!headingTags) return null;\n  return React.createElement(\"ul\", {\n    className: style\n  }, headingTags.map(function (heading, index) {\n    return React.createElement(React.Fragment, {\n      key: index\n    }, heading);\n  }));\n};\nexport { Toc as default };","map":{"version":3,"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","replaceAll","retStr","customMatchers","key","replace","RegExp","createLink","string","shapedString","toLowerCase","trimRight","anchor","split","join","createTitle","stringLimit","rawTitle","length","concat","slice","extractHeadingsFromMd","markdownText","highestTargetHeadings","lowestTargetHeadings","headingRegex","match","removeCodeBlockFromMd","codeBlockRegex","Heading","title","level","titleLimit","prototype","generateList","link","listItem","React","href","Fragment","nestUl","newHeading","headingText","matchedHashes","headingLevel","matchers","Toc","_a","highestHeadingLevel","lowestHeadingLevel","className","limit","defaultClass","customClass","headingLevels","styles","matchedHeadings","headingObjects","map","heading","headingTags","index"],"sources":["E:\\比赛\\信息安全竞赛\\m1_new\\isa_project\\node_modules\\react-toc\\node_modules\\style-inject\\dist\\style-inject.es.js","E:\\比赛\\信息安全竞赛\\m1_new\\isa_project\\node_modules\\react-toc\\src\\utils.ts","E:\\比赛\\信息安全竞赛\\m1_new\\isa_project\\node_modules\\react-toc\\src\\Heading.tsx","E:\\比赛\\信息安全竞赛\\m1_new\\isa_project\\node_modules\\react-toc\\src\\index.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// Replaces all the specified letters.\nconst replaceAll = (retStr: string, customMatchers: CustomMatchers): string => {\n  for (const key in customMatchers) {\n    retStr = retStr.replace(new RegExp(key, 'g'), customMatchers[key])\n  }\n  return retStr\n}\n\n// Removes # and connects each word with '-'.\nconst createLink = (string: string): string => {\n  const shapedString = string.toLowerCase().replace(/^#+\\s/, '').trimRight()\n  const anchor = shapedString.split(' ').join('-')\n  return anchor\n}\n\n// It removes # from the given string. And it shortens the string if its longer than \"stringLimit\".\nconst createTitle = (string: string, stringLimit: number): string => {\n  const rawTitle = string.replace(/^#+\\s/g, '')\n\n  if (rawTitle.length >= stringLimit)\n    return `${rawTitle.slice(0, stringLimit)}..`\n\n  return rawTitle\n}\n\n// It extracts headings from the given markdownText.\nconst extractHeadingsFromMd = (\n  markdownText: string,\n  highestTargetHeadings: number,\n  lowestTargetHeadings: number,\n): RegExpMatchArray | null => {\n  const headingRegex = new RegExp(\n    `^#{${highestTargetHeadings},${lowestTargetHeadings}}\\\\s.+(\\\\n|\\\\r|\\\\r\\\\n)`,\n    'gm',\n  )\n  return markdownText.match(headingRegex)\n}\n\nconst removeCodeBlockFromMd = (markdownText: string): string => {\n  const codeBlockRegex = new RegExp(\n    '((````[a-z]*\\n[\\\\s\\\\S]*?\\n````)|(```[a-z]*\\n[\\\\s\\\\S]*?\\n```)|(~~~[a-z]*\\n[\\\\s\\\\S]*?\\n~~~))',\n    'gms',\n  )\n  return markdownText.replace(codeBlockRegex, '')\n}\n\nexport {\n  replaceAll,\n  createLink,\n  createTitle,\n  extractHeadingsFromMd,\n  removeCodeBlockFromMd,\n}\n","import * as React from 'react'\nimport { replaceAll, createLink, createTitle } from './utils'\n\nexport default class Heading {\n  title: string\n  level: number\n  titleLimit: number\n  customMatchers: CustomMatchers\n\n  constructor(\n    title: string,\n    level: number,\n    titleLimit: number,\n    customMatchers?: CustomMatchers,\n  ) {\n    this.title = title\n    this.level = level\n    this.titleLimit = titleLimit\n    this.customMatchers = customMatchers ? customMatchers : {}\n  }\n\n  generateList(): JSX.Element {\n    const link = createLink(this.title)\n    const listItem = (\n      <li>\n        <a href={`#${replaceAll(link, this.customMatchers)}`}>\n          {createTitle(this.title, this.titleLimit)}\n        </a>\n      </li>\n    )\n\n    return <>{nestUl(this.level, listItem)}</>\n  }\n}\n\n/*\n Create a new heading object from the given string\n*/\nconst newHeading = (\n  headingText: string,\n  titleLimit: number,\n  customMatchers?: CustomMatchers,\n): Heading | null => {\n  const matchedHashes = headingText.match(/^#+/)\n  if (!matchedHashes) return null\n  const headingLevel: number = matchedHashes[0].split('').length\n  const matchers = customMatchers ? customMatchers : {}\n\n  return new Heading(headingText, headingLevel, titleLimit, matchers)\n}\n\n/* \n Return a nested Unordered list based on the given heading level.\n*/\nconst nestUl = (level: number, listItem: React.ReactNode) => {\n  switch (level) {\n    case 1:\n      return listItem\n    case 2:\n      return <ul>{listItem}</ul>\n    case 3:\n      return (\n        <ul>\n          <ul>{listItem}</ul>\n        </ul>\n      )\n    case 4:\n      return (\n        <ul>\n          <ul>\n            <ul>{listItem}</ul>\n          </ul>\n        </ul>\n      )\n    case 5:\n      return (\n        <ul>\n          <ul>\n            <ul>\n              <ul>{listItem}</ul>\n            </ul>\n          </ul>\n        </ul>\n      )\n    case 6:\n      return (\n        <ul>\n          <ul>\n            <ul>\n              <ul>\n                <ul>{listItem}</ul>\n              </ul>\n            </ul>\n          </ul>\n        </ul>\n      )\n    default:\n      return listItem\n  }\n}\n\nexport { newHeading }\n","import * as React from 'react'\nimport styles from './styles.module.css'\nimport { extractHeadingsFromMd, removeCodeBlockFromMd } from './utils'\nimport Heading, { newHeading } from './Heading'\n\ntype TocProps = {\n  /*\n    The markdown text you want to creat a TOC from.\n   */\n  markdownText: string\n  /*\n    The maximum length of each title in the TOC.\n  */\n  titleLimit?: number\n  /*\n    The highest level of headings you want to extract from the given markdownText.\n  */\n  highestHeadingLevel?: number\n  /*\n    The lowest level of headings you want to extract from the given markdownText.\n  */\n  lowestHeadingLevel?: number\n  /*\n    The custom className.\n    You can style the TOC like this.\n\n    ```css\n    .customClassName  {\n      border: solid 1px;\n    }\n    .customClassName > li {\n      padding-bottom: 10px;\n    }\n    ```\n  */\n  className?: string\n  /*\n    The type of a TOC you want to use.\n  */\n  type?: 'default' | 'raw' // \"fixed-left\" | \"fixed-right\" | \"material\" | \"bootstrap\"\n  /*\n    The custom options for the anchors\n  */\n  customMatchers?: CustomMatchers\n}\n\nconst Toc = ({\n  markdownText,\n  titleLimit,\n  highestHeadingLevel,\n  lowestHeadingLevel,\n  className,\n  type,\n  customMatchers,\n}: TocProps): JSX.Element | null => {\n  if (!markdownText) return null\n  // Set default values\n  const limit = titleLimit ? titleLimit : 200\n  const defaultClass = type === 'raw' ? '' : 'react-toc'\n  const customClass = className || defaultClass\n  const headingLevels: number[] = [\n    highestHeadingLevel || 1,\n    lowestHeadingLevel || 6,\n  ]\n\n  // Style settings\n  const style: string | undefined = styles[customClass] || className\n\n  // Mutate headings\n  const matchedHeadings: RegExpMatchArray | null = extractHeadingsFromMd(\n    removeCodeBlockFromMd(markdownText),\n    headingLevels[0],\n    headingLevels[1],\n  )\n  const headingObjects = matchedHeadings?.map((heading) =>\n    newHeading(heading, limit, customMatchers),\n  )\n  const headingTags:\n    | JSX.Element[]\n    | undefined = headingObjects?.map((heading: Heading) =>\n    heading.generateList(),\n  )\n\n  if (!headingTags) return null\n\n  return (\n    <ul className={style}>\n      {headingTags.map((heading: JSX.Element, index: number) => (\n        <React.Fragment key={index}>{heading}</React.Fragment>\n      ))}\n    </ul>\n  )\n}\n\nexport default Toc\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}